local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "TC2 < TF2", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

--Variables

_G.silentaim = true
_G.removeArms = true
_G.neonArms = true
_G.armColor = "Royal purple"
_G.gunColor = "Royal purple"
_G.materialColor = "Neon"
_G.gunMaterialColor = "Neon"
_G.goldenBow = true
_G.colorGun = true
_G.glovesOpacity1 = true
_G.vmOffset = true

skyBox = game:GetService("Workspace").Map.Settings.Lighting.Sky

--Tabs

local Tab = Window:MakeTab({
	Name = "Visuals",
	Icon = "rbxassetid://10789683225",
	PremiumOnly = false
})

local Other = Window:MakeTab({
	Name = "Other",
	Icon = "rbxassetid://12840064781",
	PremiumOnly = false
})

--Functions

function neonArms()
    while _G.neonArms == true do
		wait()
		if game.Workspace:FindFirstChild("Camera") then
			print("camera")
			wait()
			if game.Workspace.Camera:FindFirstChild("Arms") then
				print("arms")
        		wait()
        		if game.Workspace.Camera.Arms.CSSArms:FindFirstChild("Left Arm") then
					print("Left Arm")
					local armL = game.Workspace.Camera.Arms.CSSArms["Left Arm"]
					armL.BrickColor = BrickColor.new(_G.armColor)
        		    wait()
        		end
				if game.Workspace.Camera.Arms.CSSArms:FindFirstChild("Right Arm") then
					print("Right Arm")
					local armR = game.Workspace.Camera.Arms.CSSArms["Right Arm"]
					armR.BrickColor = BrickColor.new(_G.armColor)
        			wait()
				end
			end
		end
    end
end

function materialArms()
    while _G.materialArms == true do
		wait()
		if game.Workspace:FindFirstChild("Camera") then
			print("camera")
			wait()
			if game.Workspace.Camera:FindFirstChild("Arms") then
				print("arms")
        		wait()
        		if game.Workspace.Camera.Arms.CSSArms:FindFirstChild("Left Arm") then
					print("Left Arm")
					local armL = game.Workspace.Camera.Arms.CSSArms["Left Arm"]
					armL.Material = Enum.Material[_G.materialColor]
					game:GetService("Workspace").Camera.Arms.CSSArms["Left Arm"].Mesh.MeshType = Enum.MeshType.Brick
					wait()
        		end
				if game.Workspace.Camera.Arms.CSSArms:FindFirstChild("Right Arm") then
					local armR = game.Workspace.Camera.Arms.CSSArms["Right Arm"]
					armR.Material = Enum.Material[_G.materialColor]
					game:GetService("Workspace").Camera.Arms.CSSArms["Right Arm"].Mesh.MeshType = Enum.MeshType.Brick
					wait()
				end
			end
		end
    end
end

function colorGun()
    while _G.colorGun == true do
		if game.Workspace:FindFirstChild("Camera") then
			wait()
			if game.Workspace.Camera:FindFirstChild("Arms") then
				currentGun = game.Workspace.Camera.Arms
				for I,v in pairs(currentGun:GetChildren()) do
					if v:IsA("MeshPart") then
						v.BrickColor = BrickColor.new(_G.gunColor)
						wait(0.000000000000001)
					end
				end
				wait()
			end
		end
    end
end

function vmOffset()
    while _G.vmOffset == true do
		wait()
		if game.Workspace:FindFirstChild("Camera") then
			print("camera")
			wait()
			if game.Workspace.Camera:FindFirstChild("Arms") then
				wait()
				if game.Workspace.Camera.Arms:FindFirstChild("Offset") then
					armOffset = game.Workspace.Camera.Arms.Offset
					armOffset.Value = Vector3.new(_G.xOffset * 0.5, _G.yOffset * 0.5, _G.zOffset * 0.5)
					wait()
				end
			end
		end
    end
end

coroutine.wrap(function()
	while _G.opacityGun == true do
		if game.Workspace:FindFirstChild("Camera") then			
			wait()
			if game.Workspace.Camera:FindFirstChild("Arms") then
				currentGun = game.Workspace.Camera.Arms
				for I,v in pairs(currentGun:GetChildren()) do
					if v:IsA("MeshPart") then
						v.Transparency = (_G.gunOpacity * 0.01)
						wait(0.000000000000001)
					end
				end
				wait()
			end
		end
	end
end)()

coroutine.wrap(function()
	while _G.glovesOpacity1 == true do
		if game.Workspace:FindFirstChild("Camera") then			
			wait()
			if game.Workspace.Camera:FindFirstChild("Arms") then
				wait()
        		if game.Workspace.Camera.Arms.CSSArms:FindFirstChild("Left Arm") then
					print("Left Arm")
					local armL = game.Workspace.Camera.Arms.CSSArms["Left Arm"]
					for I,v in pairs(armL:GetChildren()) do
						if v:IsA("MeshPart") then
							v.Transparency = (_G.glovesOpacity * 0.01)
							wait(0.000000000000001)
						end
					end
					wait()
        		end
				if game.Workspace.Camera.Arms.CSSArms:FindFirstChild("Right Arm") then
					local armR = game.Workspace.Camera.Arms.CSSArms["Right Arm"]
					for I,v in pairs(armR:GetChildren()) do
						if v:IsA("MeshPart") then
							v.Transparency = (_G.glovesOpacity * 0.01)
							wait(0.000000000000001)
						end
					end
					wait()
				end
			end
		end
	end
end)()

local Section = Tab:AddSection({
	Name = "Arm mods"
})

Tab:AddToggle({
	Name = "Arms color changer",
	Default = false,
	Callback = function(Value)
        _G.neonArms = Value
        neonArms()
	end    
})

Tab:AddColorpicker({
	Name = "Arm color",
	Default = Color3.fromRGB(255, 0, 0),
	Callback = function(Value)
		_G.armColor = Value
	end	  
})
Tab:AddToggle({
	Name = "Arms material changer",
	Default = false,
	Callback = function(Value)
        _G.materialArms = Value
        materialArms()
	end    
})

Tab:AddDropdown({
	Name = "Arm material",
	Default = "Neon",
	Options = {"Neon", "Glass", "Rubber"},
	Callback = function(Value)
		_G.materialColor = Value
	end    
})

Tab:AddSlider({
	Name = "Arm accessories opacity",
	Min = 0,
	Max = 100,
	Default = 0,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "opacity",
	Callback = function(Value)
		_G.glovesOpacity = Value
	end    
})

local Section = Tab:AddSection({
	Name = "Viewmodel offset"
})

Tab:AddToggle({
	Name = "Viewmodel offset toggle",
	Default = false,
	Callback = function(Value)
        _G.vmOffset = Value
        vmOffset()
	end    
})

Tab:AddSlider({
	Name = "X offset",
	Min = -10,
	Max = 10,
	Default = 0,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "y offset",
	Callback = function(Value)
		_G.xOffset = Value
	end    
})

Tab:AddSlider({
	Name = "Y offset",
	Min = -10,
	Max = 10,
	Default = 0,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "y offset",
	Callback = function(Value)
		_G.yOffset = Value
	end    
})

Tab:AddSlider({
	Name = "Z offset",
	Min = -10,
	Max = 10,
	Default = 0,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "y offset",
	Callback = function(Value)
		_G.zOffset = Value
	end    
})

local Section = Tab:AddSection({
	Name = "Gun mods"
})

Tab:AddToggle({
	Name = "Gun color changer",
	Default = false,
	Callback = function(Value)
        _G.colorGun = Value
        colorGun()
	end    
})

Tab:AddColorpicker({
	Name = "Gun color",
	Default = Color3.fromRGB(255, 0, 0),
	Callback = function(Value)
		_G.gunColor = Value
	end	  
})

Tab:AddSlider({
	Name = "Gun opacity",
	Min = 0,
	Max = 100,
	Default = 0,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "opacity",
	Callback = function(Value)
		_G.gunOpacity = Value
	end    
})


Other:AddButton({
	Name = "Esp (not mine)",
	Callback = function()
		loadstring(game:HttpGet(('https://raw.githubusercontent.com/zachisfunny/esp-unversal/main/script'),true))()
  	end    
})

Other:AddButton({
	Name = "Silent aim (not mine)",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Trashjpg/Rage/main/TC2.lua"))()
  	end    
})

Other:AddButton({
	Name = "Silly button (⚠️Dont press⚠️)",
	Callback = function()
		OrionLib:MakeNotification({
			Name = "Silly button pressed",
			Content = "Why did you do that, i told you not to press it you little silly goofy goober",
			Image = "rbxassetid://11154422902",
			Time = 6
		})
  	end    
})

OrionLib:Init()
